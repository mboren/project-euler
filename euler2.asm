# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# sum
li	$t0, 0

# fib(n-2)
li	$t1, 1

# fib(n-1)
li	$t2, 1

# fib(n)
li	$t3, 0

loopstart:
	# calculate fib(n) = fib(n-1) + fib(n-2)
	addu	$t3, $t1, $t2

	# shift fib(n-1) to fib(n-2)
	move	$t2, $t1

	# shift fib(n) to fib(n-1)
	move	$t1, $t3

	# if fib(n) >= 4000000 goto loopend
	bgeu	$t3, 4000000, loopend

	# if fib(n) % 2 != 0 goto continue
	remu	$t4, $t3, 2
	bnez	$t4, continue

	# else add fib(n) to total
	addu	$t0, $t0, $t3

continue:
	j loopstart
loopend:

	# print integer
	li	$v0, 1
	move	$a0, $t0
	syscall

	# exit
	li	$v0, 10
	syscall